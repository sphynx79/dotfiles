# vim: set sw=4 ts=4 sts=4 et tw=120 foldmarker={{{,}}} foldmethod=marker nospell:

# VARIABLES {{{

    # Set your personal hyprland configuration here

    # Main modifier
    $mainMod = Super # super / meta / windows key
    $scrPath=$HOME/.local/lib/hyde # set scripts path

    # Assign apps
    $TERMINAL = kitty
    $EDITOR = subl
    $EXPLORER = dolphin
    $BROWSER = vivaldi
    $active = 0.95
    $inactive = 0.85
# }}}

# SOURCE {{{
    # TODO: vedere dove mettere questa parte per avere priorita sui temi
    # TODO: Eliminare la gestione di wallbash
    source = $XDG_CONFIG_HOME/hypr/themes/colors.conf # Hyde wallbash colors

    # TODO: Non so perche e stato messo qui vedere se spostarlo
    # Source groupbar in here
    group:groupbar {
        enabled = true
        gradients = 1
        render_titles = 1
        font_weight_inactive = normal
        font_weight_active = semibold
        col.active = rgba($wallbash_pry3ee)
        col.inactive = rgba($wallbash_pry1ee)
        col.locked_active = rgba($wallbash_pry2ee)
        col.locked_inactive = rgba($wallbash_pry4ee)
        text_color = rgba($wallbash_txt3ee)
        text_color_inactive = rgba($wallbash_txt1ee)    
    }
        
    # TODO: vedere quali di questa lasciare
    source = $XDG_CONFIG_HOME/hypr/themes/theme.conf # theme specific settings
    source = $XDG_CONFIG_HOME/hypr/themes/wallbash.conf # Theme specific settings after Sanitize and handle fallbacks
    # source = $XDG_CONFIG_HOME/hypr/nvidia.conf # Nvidia specific settings
    source = $XDG_CONFIG_HOME/hypr/animations.conf # source animations variables
    source = $XDG_CONFIG_HOME/hypr/shaders.conf # source shader variables
    # source = $XDG_CONFIG_HOME/hypr/hyde.conf
    # TODO: vedere se lasciarlo
    source = $XDG_STATE_HOME/hyde/hyprland.conf # translated from config.toml // should override everything!
    # TODO: vedere come vengono gestiti i shader 
    decoration:screen_shader = $XDG_CONFIG_HOME/hypr/shaders/.compiled.cache.glsl #! This is the compiled shader file, it will be created by the shaders.sh script
# }}}

# ENV {{{
    # XDG Specifications - https://wiki.hyprland.org/Configuring/Environment-variables/#xdg-specifications
    env = XDG_CURRENT_DESKTOP,Hyprland
    env = XDG_SESSION_TYPE,wayland
    env = XDG_SESSION_DESKTOP,Hyprland

    # Qt Variables  - https://wiki.hyprland.org/Configuring/Environment-variables/#qt-variables
    env = QT_AUTO_SCREEN_SCALE_FACTOR,1 # (From the Qt documentation) enables automatic scaling, based on the monitorâ€™s pixel density
    env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1  # Disables window decorations on Qt applications
    env = QT_QPA_PLATFORMTHEME,qt6ct # Tells Qt based applications to pick your theme from qt5ct, use with Kvantum.

    # Toolkit Backend Variables - https://wiki.hyprland.org/Configuring/Environment-variables/#toolkit-backend-variables
    env = GDK_BACKEND,wayland,x11,* # GTK: Use wayland if available. If not: try x11, then any other GDK backend.
    env = QT_QPA_PLATFORM,wayland;xcb  # Tell Qt applications to use the Wayland backend, and fall back to x11 if Wayland is unavailable
    env = SDL_VIDEODRIVER,wayland # Run SDL2 applications on Wayland. Remove or set to x11 if games that provide older versions of SDL cause compatibility issues
    env = CLUTTER_BACKEND,wayland # Clutter package already has wayland enabled, this variable will force Clutter applications to try and use the Wayland backend
    
    # Wayland-ENV
    env = MOZ_ENABLE_WAYLAND,1
    env = GDK_SCALE,1 # Set GDK scale to 1 // For Xwayland on HiDPI
    env = ELECTRON_OZONE_PLATFORM_HINT,auto  # Set Electron Ozone Platform Hint to auto // For Electron apps on Wayland

    env = __GLX_VENDOR_LIBRARY_NAME,nvidia # Disable this if you have issues with screensharing
    env = GBM_BACKEND,nvidia-drm
    env = NVD_BACKEND,direct
    env = PROTON_ENABLE_NGX_UPDATER,1
    env = LIBVA_DRIVER_NAME,nvidia
    env = __GL_GSYNC_ALLOWED,1
    env = __GL_MaxFramesAllowed,1
    env = WLR_DRM_NO_ATOMIC,1
    env = __GL_VRR_ALLOWED,1
    env = GDK_DPI_SCALE,0.9
    env = SCALE_FACTOR,1
    env = ELECTRON_SCALE_FACTOR,1
    env = ELECTRON_FORCE_DEVICE_SCALE_FACTOR,1
    env = _JAVA_OPTIONS,-Dsun.java2d.uiScale=1 -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true
    #env =  AQ_NO_MODIFIERS,1
    #env = __NV_DISABLE_EXPLICIT_SYNC,1
    
    # XDG-ENV
    env = XDG_CONFIG_HOME,$XDG_CONFIG_HOME
    env = XDG_CACHE_HOME,$HOME/.cache
    env = XDG_DATA_HOME,$HOME/.local/share

    # HyDE Variables
    env = PATH,$HOME/.local/bin:$scrPath:$env.PATH:$PATH

    # HyDE-ENV
    env = HYDE_RUNTIME_DIR,$XDG_RUNTIME_DIR/hyde
    env = HYDE_CONFIG_HOME,$HOME/.config/hyde
    env = HYDE_CACHE_HOME,$HOME/.cache/hyde
    env = HYDE_DATA_HOME,$HOME/.local/share/hyde
    env = HYDE_STATE_HOME,$HOME/.local/state/hyde

    # Setting GTK 
    # Create a dconf file that will be loaded later one time, better than multiple dconf commands and better than gsettings
    # TODO: ho messo valori fissi, ma vedererlo come mettere e gestirlo con una cartella theme
    # e poi fare il source della cartella theme
    $dconFile=$env.XDG_CACHE_HOME/hyde/dconf
    $dConf = \n[org/gnome/desktop/interface]\n
    $dConf = $dConf icon-theme='Tela-circle-dracula'\n
    $dConf = $dConf gtk-theme='Wallbash-Gtk'\n
    $dConf = $dConf color-scheme='prefer-dark'\n
    $dConf = $dConf cursor-theme='Bibata-Modern-Ice'\n
    $dConf = $dConf cursor-size=24\n
    $dConf = $dConf font-name='Cantarell 10'\n
    $dConf = $dConf document-font-name='Cantarell 10'\n
    $dConf = $dConf monospace-font-name='CaskaydiaCove Nerd Font Mono 9'\n
    $dConf = $dConf font-antialiasing='rgba'\n
    # TODO: era full ho messo slight, vedere quale e migliore
    $dConf = $dConf font-hinting='slight'\n
    $dConf = $dConf [org/gnome/desktop/default-applications/terminal]\nexec='kitty'
    $dConf = $dConf \n[org/gnome/desktop/wm/preferences]\nbutton-layout=''\n
    $dconf.preserve =  dconf dump / > $dconFile
    $dconf.populate =  printf "$dConf" >> $dconFile
    $dconf.reset = dconf reset -f / < $dconFile #! Use this as dconf update won't refresh when key-val is the same
    $dconf.load = dconf load -f / < $dconFile
    # $dconf.update = dconf update
    $set.hyprCursor = hyprctl setcursor $CURSOR_THEME $CURSOR_SIZE
    # $exec.dConf = ( $dconf.populate && $dconf.load && $dconf.update && $set.hyprCursor ) 
    $exec.dConf = ( $dconf.preserve && $dconf.populate && $dconf.reset && $dconf.load && $set.hyprCursor ) 

    # Execute
    exec = $exec.dConf
# }}}

# LAUNCHER {{{
    # Tipo di slice per uwsm
    # a: app-graphical.slice (predefinita) - Per le applicazioni grafiche generiche.
    # b: background-graphical.slice - Per le applicazioni grafiche in background.
    # s: session-graphical.slice - Per le applicazioni che sono considerate parte integrante della sessione stessa.[1][3][4]
    exec-once = uwsm app -- $scrPath/resetxdgportal.sh || $scrPath/resetxdgportal.sh # reset XDPH for screenshare
    exec-once = uwsm app -- dbus-update-activation-environment --systemd --all || dbus-update-activation-environment --systemd --all  # for XDPH
    exec-once = uwsm app -- systemctl --user import-environment QT_QPA_PLATFORMTHEME WAYLAND_DISPLAY XDG_CURRENT_DESKTOP || systemctl --user import-environment QT_QPA_PLATFORMTHEME WAYLAND_DISPLAY XDG_CURRENT_DESKTOP # for XDPH
    # TODO: Vedere se sostituire hyprpolkitagent, vedere (https://wiki.hypr.land/Hypr-Ecosystem/hyprpolkitagent/) 
    exec-once = uwsm app -t service -s s -- $scrPath/polkitkdeauth.sh || $scrPath/polkitkdeauth.sh  # authentication dialogue for GUI apps
    # TODO: Semplificare waybar
    exec-once = uwsm app -t service -s s -- waybar || waybar   # launch the system bar
    exec-once = uwsm app -t service -s a -- blueman-applet || blueman-applet # systray app for Bluetooth
    exec-once = uwsm app -t service -s a -- udiskie --no-automount --smart-tray || udiskie --no-automount --smart-tray # front-end that allows to manage removable media
    # TODO: vedere se sostituirlo con dust, HYDE usa dust
    exec-once = uwsm app -t service -s s -- swaync || swaync # start notification demon
    exec-once = uwsm app -t service -s a -- nm-applet --indicator  || nm-applet --indicator # systray app for Network/Wifi
    exec-once = uwsm app -t service -s s -- wl-paste --type text --watch cliphist store || wl-paste --type text --watch cliphist store # clipboard store text data
    exec-once = uwsm app -t service -s s -- wl-paste --type image --watch cliphist store || wl-paste --type image --watch cliphist store # clipboard store image data
    exec-once = uwsm app -t service -s s -- wl-clip-persist --clipboard regular || wl-clip-persist --clipboard regular # wl-clip-persist (daemon)  
    # TODO: Semplificare la gestione wallpaper
    exec-once = uwsm app -t service -s b -- $scrPath/wallpaper.sh --global || $scrPath/wallpaper.sh --global  # start wallpaper daemon
    exec-once = uwsm app -t service -s s -- hypridle || hypridle # idle daemon
    exec-once = uwsm app -t service -s s -- /home/ichelema/.asdf/shims/pypr || /home/ichelema/.asdf/shims/pypr


    exec = $scrPath/keybinds.hint.py --format rofi > $XDG_RUNTIME_DIR/hyde/keybinds_hint.rofi

# }}}

# GENERAL {{{
    general {
        snap { # snapping for floating windows
            enabled = true
        }
    }
# }}}

# MONITOR {{{
    monitorv2 {
        output = DP-1
        mode = 5120x1440@165
        position = 0x0
        scale = 1.25
        bitdepth = 10
        #cm = hdr
        sdrbrightness = 1.0
        sdrsaturation = 1.0
        supports_wide_color = 1
        supports_hdr = 1
        sdr_min_luminance = 0.005
        sdr_max_luminance = 200
        min_luminance = 0
        max_luminance = 1000
        max_avg_luminance = 200
    }
# }}}

# INPUT {{{
    input {
        kb_layout = us
        kb_variant =
        follow_mouse = 2
        #follow_mouse_threshold = 500
        special_fallthrough = true
        kb_options = compose:rctrl,fkeys:basic_13-24

        scroll_factor = 0.8
        accel_profile = custom
        scroll_points = 0.2144477506 0.000 0.307 0.615 1.077 1.539 2.002 2.505 3.208 3.910 4.613 5.315 6.018 6.720 7.423 8.125 8.828 9.530 10.233 10.935 12.387

        sensitivity = -0.3
        force_no_accel = false
        numlock_by_default = true
        repeat_rate = 40
        repeat_delay = 280

        touchpad {
            natural_scroll = no
        }
    }

    gestures {
        workspace_swipe = false
    }
# }}}

# CURSOR {{{
    cursor {
        use_cpu_buffer = true
        no_hardware_cursors = false
        no_warps = true
        #persistent_warps = true
    }
# }}}

# LAYOUT {{{
    dwindle {
        pseudotile = true
        preserve_split = true
        force_split = 2
        smart_split = true
        #single_window_aspect_ratio = 16 9
    }

    master {
        new_status = master
    }

# }}}

# MISC {{{
    # TODO: ho messo i font fisso, ma vedererlo come mettere e gestirlo con una cartella theme
    misc {
        vrr = 0
        disable_hyprland_logo = true
        disable_splash_rendering = true
        force_default_wallpaper = 0
        font_family = Cantarell 
        #focus_on_activate = true
    }
    
    xwayland {
        force_zero_scaling = true
    }

    render {
        direct_scanout = true
    }

    # In sezione OpenGL
    #opengl {
    #    nvidia_anti_flicker = true  # riduce il flickering su nvidia
    #}
# }}}

# KEYBINDINGS {{{
    # Quake mode {{{
        $d=[Quake|Apps]
        bindd = Ctrl, grave, $d kitty quake, exec, pypr-client toggle term
        bindd = $mainMod, grave, $d obsidian quake, exec, pypr-client toggle obsidian
        bindd = Alt, grave, $d chat-gpt quake, exec, pypr-client toggle chat-gpt
        bindd = $mainMod SHIFT, grave, $d dolphin quake, exec, pypr-client toggle dolphin
    # }}}

    # Window Management {{{
        $wm=Window Management
        $d=[$wm]
        bindd = $mainMod, Q, $d close focused window, exec, $scrPath/dontkillsteam.sh
        bindd = $mainMod, Delete, $d kill hyprland session, exit
        bindd = $mainMod, W, $d Toggle floating,  exec, hyprctl --batch "dispatch togglefloating; dispatch resizeactive exact 35% 95%; dispatch centerwindow"
        bindd = Shift, F11, $d toggle fullscreen, fullscreen
        bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh
        bindd = $mainMod, S, $d toggle split, togglesplit
        bindd = $mainMod Alt, T, $d toggle waybar, exec, killall waybar || uwsm app -t service -s s -- waybar || waybar # restart waybar

        $d=[$wm|Group Navigation]
        bindd = $mainMod, G, $d toggle group, togglegroup
        bindd = $mainMod, H, $d change active group backwards   , changegroupactive, b
        bindd = $mainMod, L, $d change active group forwards  , changegroupactive, f
        
        $d=[$wm|Change focus]
        bindd = $mainMod, Left, $d focus left, movefocus, l
        bindd = $mainMod, Right, $d focus right , movefocus, r
        bindd = $mainMod, Up, $d focus up , movefocus, u
        bindd = $mainMod, Down , $d focus down, movefocus, d
        
        $d=[$wm|Move active window across current workspace]
        $moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
        bindde = $mainMod Shift Control, left, Move active window to the left, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
        bindde = $mainMod Shift Control, right, Move active window to the right, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
        bindde = $mainMod Shift Control, up, Move active window up, exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
        bindde = $mainMod Shift Control, down, Move active window down, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d
        
        $d=[$wm|Resize Active Window]
        bindde = $mainMod Shift, Right, $d resize window right , resizeactive, 30 0
        bindde = $mainMod Shift, Left, $d resize window left, resizeactive, -30 0
        bindde = $mainMod Shift, Up, $d resize window up, resizeactive, 0 -30
        bindde = $mainMod Shift, Down, $d resize  window down, resizeactive, 0 30

        $d=[$wm|Move & Resize with mouse]
        binddm = $mainMod, mouse:272, $d hold to move window, movewindow
        binddm = $mainMod, mouse:273, $d hold to resize window, resizewindow

        # Move/Switch to special workspace (scratchpad)
        $d=[$ws|Navigation|Special workspace]
        bindd = $mainMod SHIFT, M, $d toggle scratchpad , togglespecialworkspace, special
        bindd = $mainMod, M, $d move to scratchpad (silent) , exec, pypr-client toggle_special special
        bindd = $mainMod Alt, M, $d move to scratchpad (silent) , movetoworkspacesilent, special
    # }}}

    # Workspace {{{
        $ws=Workspaces
        $d=[$ws|Navigation]
        bindd = $mainMod, 1, $d navigate to workspace 1 , workspace, 1
        bindd = $mainMod, 2, $d navigate to workspace 2 , workspace, 2
        bindd = $mainMod, 3, $d navigate to workspace 3 , workspace, 3
        bindd = $mainMod, 4, $d navigate to workspace 4 , workspace, 4
        bindd = $mainMod, 5, $d navigate to workspace 5 , workspace, 5
        bindd = $mainMod, 6, $d navigate to workspace 6 , workspace, 6
        bindd = $mainMod, 7, $d navigate to workspace 7 , workspace, 7
        bindd = $mainMod, 8, $d navigate to workspace 8 , workspace, 8
        bindd = $mainMod, 9, $d navigate to workspace 9 , workspace, 9
        bindd = $mainMod, 0, $d navigate to workspace 10 , workspace, 10
        
        $d=[$ws|Navigation|Relative workspace]
        bindd = $mainMod Control, Right, $d change active workspace forwards  , workspace, r+1
        bindd = $mainMod Control, Left, $d change active workspace backwards , workspace, r-1
        
        $d=[$ws|Move window to workspace]
        bindd = $mainMod Alt, 1, $d move to workspace 1 , movetoworkspace, 1
        bindd = $mainMod Alt, 2, $d move to workspace 2 , movetoworkspace, 2
        bindd = $mainMod Alt, 3, $d move to workspace 3 , movetoworkspace, 3
        bindd = $mainMod Alt, 4, $d move to workspace 4 , movetoworkspace, 4
        bindd = $mainMod Alt, 5, $d move to workspace 5 , movetoworkspace, 5
        bindd = $mainMod Alt, 6, $d move to workspace 6 , movetoworkspace, 6
        bindd = $mainMod Alt, 7, $d move to workspace 7 , movetoworkspace, 7
        bindd = $mainMod Alt, 8, $d move to workspace 8 , movetoworkspace, 8
        bindd = $mainMod Alt, 9, $d move to workspace 9 , movetoworkspace, 9
        bindd = $mainMod Alt, 0, $d move to workspace 10 , movetoworkspace, 10
        
        $d=[$ws|Move window to workspace|Realtive workspace]
        bindd = $mainMod Control+Alt, Right, $d move window to next relative workspace , movetoworkspace, r+1
        bindd = $mainMod Control+Alt, Left, $d move window to previous relative workspace , movetoworkspace, r-1
        
        $d=[$ws|Navigation|Move window silently]
        bindd = $mainMod Shift, 1, $d move to workspace 1  (silent), movetoworkspacesilent, 1
        bindd = $mainMod Shift, 2, $d move to workspace 2  (silent), movetoworkspacesilent, 2
        bindd = $mainMod Shift, 3, $d move to workspace 3  (silent), movetoworkspacesilent, 3
        bindd = $mainMod Shift, 4, $d move to workspace 4  (silent), movetoworkspacesilent, 4
        bindd = $mainMod Shift, 5, $d move to workspace 5  (silent), movetoworkspacesilent, 5
        bindd = $mainMod Shift, 6, $d move to workspace 6  (silent), movetoworkspacesilent, 6
        bindd = $mainMod Shift, 7, $d move to workspace 7  (silent), movetoworkspacesilent, 7
        bindd = $mainMod Shift, 8, $d move to workspace 8  (silent), movetoworkspacesilent, 8
        bindd = $mainMod Shift, 9, $d move to workspace 9  (silent), movetoworkspacesilent, 9
        bindd = $mainMod Shift, 0, $d move to workspace 10 (silent), movetoworkspacesilent, 10
        
        # Scroll worspace with mouse
        # bindd = $mainMod, mouse_down, $d next workspace, workspace, e+1
        # bindd = $mainMod, mouse_up, $d previous workspace, workspace, e-1



    # }}}

    # Launcher {{{
        $l=Launchers
        $d=[$l|Apps]
        bindd = $mainMod Ctrl, T, $d terminal emulator , exec , uwsm app -t service -s a -- $TERMINAL || $TERMINAL
        bindd = $mainMod Ctrl, E, $d file explorer , exec , uwsm app -t service -s a -- $EXPLORER || $EXPLORER
        bindd = $mainMod Ctrl, S, $d text editor , exec, uwsm app -t service -s a -- $EDITOR || $EDITOR
        bindd = $mainMod Ctrl, B, $d web browser , exec, uwsm app -t service -s a -- $BROWSER || $BROWSER
        bindd = Control Shift, Esc, $d system monitor , exec, uwsm app -t service -s a -- $scrPath/sysmonlaunch.sh || $scrPath/sysmonlaunch.sh
        bindd = $mainMod Ctrl, O, $d octopi pacman gui , exec, uwsm app -t service -s a -- /usr/bin/octopi || /usr/bin/octopi
        bindd = $mainMod Ctrl, L, $d llm , exec, uwsm app -t service -s a -- ~/.local/bin/llmmenu || ~/.local/bin/llmmenu
        
        # Special Key used with Nuphy Keyboard
        $d=[$l|Apps Nuphy Keyboard]
        bindd = , F13, $d web browser , exec, uwsm app -t service -s a -- $BROWSER || $BROWSER
        bindd = , F14, $d file explorer , exec, uwsm app -t service -s a -- $EXPLORER || $EXPLORE
        bindd = , F15, $d text editor , exec, uwsm app -t service -s a -- $EDITOR || $EDITOR
        bindd = , F16, $d terminal emulator , exec, uwsm app -t service -s a -- $TERMINAL || $TERMINAL
        bindd = , F17, $d octopi pacman gui , exec, uwsm app -t service -s a -- /usr/bin/octopi || /usr/bin/octopi
        bindd = , F18, $d system monitor , exec, uwsm app -t service -s a -- $scrPath/sysmonlaunch.sh || $scrPath/sysmonlaunch.sh
        bindd = , F19, $d llm , exec, uwsm app -t service -s a -- ~/.local/bin/llmmenu || ~/.local/bin/llmmenu
        bindd = , F20, logout menu, exec, uwsm app -t service -s a -- $scrPath/logoutlaunch.sh || $scrPath/logoutlaunch.sh
        
        $d=[$l|Rofi menus]
        $rofi-launch=$scrPath/rofilaunch.sh
        bindd = $mainMod, Space, $d application finder , exec, pkill -x rofi || $rofi-launch d
        bindd = $mainMod, TAB, $d window switcher , exec, pkill -x rofi || $rofi-launch w
        bindd = $mainMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f
        bindd = $mainMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
        bindd = $mainMod, comma, $d emoji  picker , exec, pkill -x rofi || $scrPath/emoji-picker.sh # launch emoji picker
        bindd = $mainMod, period, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
        bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
        bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
        bindd = $mainMod Alt, R, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu

        bind = Alt, Space, global, uwsm app -- kando:example-menu || kando:example-menu 
    
    # }}}
    
    # Hardware Control {{{
        $hc=Hardware Controls
        $d=[$hc|Audio]
        binddl  = , F10, $d toggle mute output , exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
        binddl  = , XF86AudioMute,$d  toggle mute output, exec, $scrPath/volumecontrol.sh -o m # toggle audio mute
        binddel = , F11, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
        binddel = , F12, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume
        binddl  = , XF86AudioMicMute,$d un/mute microphone  , exec, $scrPath/volumecontrol.sh -i m # toggle microphone mute
        binddel = , XF86AudioLowerVolume, $d decrease volume , exec, $scrPath/volumecontrol.sh -o d # decrease volume
        binddel = , XF86AudioRaiseVolume, $d increase volume , exec, $scrPath/volumecontrol.sh -o i # increase volume

        $d=[$hc|Media]
        binddl  = , XF86AudioPlay,$d play media, exec, playerctl play-pause # toggle between media play and pause
        binddl  = , XF86AudioPause,$d pause media, exec, playerctl play-pause # toggle between media play and pause
        binddl  = , XF86AudioNext,$d next media  , exec, playerctl next # media next
        binddl  = , XF86AudioPrev,$d  previous media , exec, playerctl previous # media previous
        
        $d=[$hc|Brightness]
        binddel = , XF86MonBrightnessUp, $d increase brightness , exec, $scrPath/brightnesscontrol.sh i # increase brightness
        binddel = , XF86MonBrightnessDown, $d decrease brightness , exec, $scrPath/brightnesscontrol.sh d # decrease brightness
    # }}}
    
    # Utilities {{{
        $ut=Utilities
        $d=[$ut]
        bindd = $mainMod, L, $d lock screen, exec, lockscreen.sh # lockcreen
        bindd = Control Alt, Delete, $d logout menu, exec, $scrPath/logoutlaunch.sh # logout menu
        binddl = $mainMod, K, $d toggle keyboard layout , exec, $scrPath/keyboardswitch.sh # switch keyboard layout
        bindd = $mainMod Alt, G, $d game mode , exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
        bindd = $mainMod, mouse_up, $d zooom out, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.5}')
        bindd = $mainMod, mouse_down, $d zoom in, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.8}')
        
        $d=[$ut|Screen Capture]
        bindd = $mainMod Shift, P, $d color picker, exec, hyprpicker -an # Pick color (Hex) >> clipboard#
        bindd = $mainMod, P, $d snip screen , exec, $scrPath/screenshot.sh s # partial screenshot capture
        bindd = $mainMod Control, P, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
        binddl = $mainMod Alt, P, $d print monitor , exec, $scrPath/screenshot.sh m # monitor screenshot capture
    # }}}
    
    # Ricing {{{
        $rice=Theming and Wallpaper
        $d=[$rice]
        # TODO: Vedere quali di questi lasciare
        bindd = $mainMod Alt, Right, $d next global wallpaper , exec, $scrPath/wallpaper.sh -Gn # next global wallpaper
        bindd = $mainMod Alt, Left, $d previous global wallpaper , exec, $scrPath/wallpaper.sh -Gp # previous global wallpaper
        bindd = $mainMod Shift, W, $d select a global wallpaper , exec, pkill -x rofi || $scrPath/wallpaper.sh -SG # launch wallpaper select menu
        bindd = $mainMod Alt, Up, $d next waybar layout , exec, $scrPath/wbarconfgen.sh n # next waybar mode
        bindd = $mainMod Alt, Down, $d previous waybar layout , exec, $scrPath/wbarconfgen.sh p # previous waybar mode
        bindd = $mainMod Shift, R, $d wallbash mode selector , exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m # launch wallbash mode select menu
        bindd = $mainMod Shift, T, $d select a theme, exec, pkill -x rofi || $scrPath/themeselect.sh # launch theme select menu
        bindd = $mainMod+Shift, Y, $d select animations, exec, pkill -x rofi || $scrPath/animations.sh --select # launch animations select menu
        bindd = $mainMod+Shift, U, $d select hyprlock layout, exec, pkill -x rofi || $scrPath/hyprlock.sh --select # launch hyprlock layout select menu
    # }}}

    $d=#! unset the group name

# }}}

# WINDOW RULES {{{

    # This symbol indicates that the following values will override the default configuration, override other group rules
    $&=override

    # FIX
    windowrule = suppressevent maximize, class:.*
    # Fix some dragging issues with XWayland
    windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

    # idleinhibit rules
    windowrule = idleinhibit fullscreen, class:^(.*celluloid.*)$|^(.*mpv.*)$|^(.*vlc.*)$
    windowrule = idleinhibit fullscreen, class:^(.*[Ss]potify.*)$
    windowrule = idleinhibit fullscreen, class:^(.*LibreWolf.*)$|^(.*floorp.*)$|^(.*Brave.*)$|^(.*firefox.*)$|^(.*chromium.*)$|^(.*zen.*)$|^(.*vivaldi.*)$

    # Picture-in-Picture
    windowrule = float, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
    windowrule = keepaspectratio, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
    windowrule = move 73% 72%, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$ 
    windowrule = size 25%, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
    windowrule = float, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
    windowrule = pin, title:^([Pp]icture[-\s]?[Ii]n[-\s]?[Pp]icture)(.*)$
    
    # Kando setting
    windowrule = noblur, class:kandotic
    windowrule = opaque, class:kando
    windowrule = size 100% 100%, class:kando
    windowrule = noborder, class:kando
    windowrule = noanim, class:kando
    windowrule = float, class:kando
    windowrule = pin, class:kando

    # Opacity
    windowrule = opacity $active $& $inactive $& 1,class:^(Steam)$
    windowrule = opacity $active $& $inactive $& 1,class:^(firefox)$
    windowrule = opacity $active $& $inactive $& 1,class:^(Google-chrome)$
    windowrule = opacity $active $& $inactive $& 1,class:^(Brave-browser)$
    windowrule = opacity $active $& $inactive $& 1,class:^(code-oss)$
    windowrule = opacity $active $& $inactive $& 1,class:^([Cc]ode)$
    windowrule = opacity $active $& $inactive $& 1,class:^(code-url-handler)$
    windowrule = opacity $active $& $inactive $& 1,class:^(code-insiders-url-handler)$
    windowrule = opacity $active $& $inactive $& 1,class:^(kitty)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.kde.dolphin)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.kde.krusader)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.gnome.Meld)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.kde.ark)$
    windowrule = opacity $active $& $inactive $& 1,class:^(nwg-look)$
    windowrule = opacity $active $& $inactive $& 1,class:^(qt5ct)$
    windowrule = opacity $active $& $inactive $& 1,class:^(qt6ct)$
    windowrule = opacity $active $& $inactive $& 1,class:^(kvantummanager)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.pulseaudio.pavucontrol)$
    windowrule = opacity $active $& $inactive $& 1,class:^(blueman-manager)$
    windowrule = opacity $active $& $inactive $& 1,class:^(nm-applet)$
    windowrule = opacity $active $& $inactive $& 1,class:^(nm-connection-editor)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.kde.polkit-kde-authentication-agent-1)$
    windowrule = opacity $active $& $inactive $& 1,class:^(polkit-gnome-authentication-agent-1)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.freedesktop.impl.portal.desktop.gtk)$
    windowrule = opacity $active $& $inactive $& 1,class:^(org.freedesktop.impl.portal.desktop.hyprland)$
    windowrule = opacity $active $& $inactive $& 1,class:^([Ss]team)$
    windowrule = opacity $active $& $inactive $& 1,class:^(steamwebhelper)$
    windowrule = opacity $active $& $inactive $& 1,class:^([Ss]potify)$
    windowrule = opacity $active $& $inactive $& 1,initialTitle:^(Spotify Free)$
    windowrule = opacity $active $& $inactive $& 1,class:^(discord)$
    windowrule = opacity $active $& $inactive $& 1,class:^(Signal)$ 
    windowrule = opacity 0.94 $inactive,class:^(zen-beta)$
    windowrule = opacity 1.1 0.94,class:^(vivaldi-stable)$
    windowrule = opacity 1.1 0.94, class:^(org.qutebrowser.qutebrowser)$
    windowrule = opacity 0.92 1.1,class:^(sublime_text)$
    windowrule = opacity $active $inactive,class:^(Typora)$
    windowrule = opacity $active $inactive,class:^(octopi)$
    windowrule = opacity 0.90 0.90,class:^(com.github.rafostar.Clapper)$ # Clapper-Gtk
    windowrule = opacity 0.80 0.80,class:^(com.github.tchx84.Flatseal)$ # Flatseal-Gtk
    windowrule = opacity 0.80 0.80,class:^(hu.kramo.Cartridges)$ # Cartridges-Gtk
    windowrule = opacity 0.80 0.80,class:^(com.obsproject.Studio)$ # Obs-Qt
    windowrule = opacity 0.80 0.80,class:^(gnome-boxes)$ # Boxes-Gtk
    windowrule = opacity 0.80 0.80,class:^(vesktop)$ # Vesktop
    windowrule = opacity 0.80 0.80,class:^(WebCord)$ # WebCord-Electron
    windowrule = opacity 0.80 0.80,class:^(ArmCord)$ # ArmCord-Electron
    windowrule = opacity 0.80 0.80,class:^(app.drey.Warp)$ # Warp-Gtk
    windowrule = opacity 0.80 0.80,class:^(net.davidotek.pupgui2)$ # ProtonUp-Qt
    windowrule = opacity 0.80 0.80,class:^(yad)$ # Protontricks-Gtk
    windowrule = opacity 0.80 0.80,class:^(Signal)$ # Signal-Gtk
    windowrule = opacity 0.80 0.80,class:^(io.github.alainm23.planify)$ # planify-Gtk
    windowrule = opacity 0.80 0.80,class:^(io.gitlab.theevilskeleton.Upscaler)$ # Upscaler-Gtk
    windowrule = opacity 0.80 0.80,class:^(com.github.unrud.VideoDownloader)$ # VideoDownloader-Gtk
    windowrule = opacity 0.80 0.80,class:^(io.gitlab.adhami3310.Impression)$ # Impression-Gtk
    windowrule = opacity 0.80 0.80,class:^(io.missioncenter.MissionCenter)$ # MissionCenter-Gtk
    windowrule = opacity 0.80 0.80,class:^(io.github.flattool.Warehouse)$ # Warehouse-Gtk


    # Position, size, float, focus
    windowrule = move 100%-w-126 26,class:^(org.pulseaudio.pavucontrol)$
    windowrule = move 100%-w-16 26,class:(syncthingtray-qt6)
    windowrule = move 40% 3%, class:^(imv)$
    
    windowrule = size 1500 1000,class:^(octopi)$
    windowrule = size 20% 38%, class:^(imv)$
    windowrule = size 1000 900,class:(syncthingtray-qt6)
    windowrule = size >30% 90%, title:^.*\sKrusader

    windowrule = float,class:^(octopi)$
    windowrule = float, class:^(imv)$
    windowrule = float,title:^(Konfigurator - Personalizzazione di Krusader)$
    windowrule = float, title:^.*\sKrusader
    windowrule = float, opacity $active $inactive,class:^(sysd-manager)$
    windowrule = float,class:(syncthingtray-qt6)

    windowrule = nofocus, class:^(imv)$
    windowrule = pin, class:^(imv)$
    windowrule = center, title:^.*\sKrusader
    
    # common modals
    windowrule = float,class:^(org.kde.dolphin)$,title:^(Progress Dialog â€” Dolphin)$
    windowrule = float,class:^(org.kde.dolphin)$,title:^(Copying â€” Dolphin)$
    windowrule = float,title:^(About Mozilla Firefox)$
    windowrule = float,class:^(firefox)$,title:^(Picture-in-Picture)$
    windowrule = float,class:^(firefox)$,title:^(Library)$
    windowrule = float,class:^(kitty)$,title:^(top)$
    windowrule = float,class:^(kitty)$,title:^(btop)$
    windowrule = float,class:^(kitty)$,title:^(htop)$
    windowrule = float,class:^(vlc)$
    windowrule = float,class:^(kvantummanager)$
    windowrule = float,class:^(qt5ct)$
    windowrule = float,class:^(qt6ct)$
    windowrule = float,class:^(nwg-look)$
    windowrule = float,class:^(org.kde.ark)$
    windowrule = float,class:^(org.pulseaudio.pavucontrol)$
    windowrule = float,class:^(blueman-manager)$
    windowrule = float,class:^(nm-applet)$
    windowrule = float,class:^(nm-connection-editor)$
    windowrule = float,class:^(org.kde.polkit-kde-authentication-agent-1)$
    windowrule = float,class:^(Signal)$ # Signal-Gtk
    windowrule = float,class:^(com.github.rafostar.Clapper)$ # Clapper-Gtk
    windowrule = float,class:^(app.drey.Warp)$ # Warp-Gtk
    windowrule = float,class:^(net.davidotek.pupgui2)$ # ProtonUp-Qt
    windowrule = float,class:^(yad)$ # Protontricks-Gtk
    windowrule = float,class:^(eog)$ # Imageviewer-Gtk
    windowrule = float,class:^(io.github.alainm23.planify)$ # planify-Gtk
    windowrule = float,class:^(io.gitlab.theevilskeleton.Upscaler)$ # Upscaler-Gtk
    windowrule = float,class:^(com.github.unrud.VideoDownloader)$ # VideoDownloader-Gkk
    windowrule = float,class:^(io.gitlab.adhami3310.Impression)$ # Impression-Gtk
    windowrule = float,class:^(io.missioncenter.MissionCenter)$ # MissionCenter-Gtk
    windowrule = float,title:^(Open)$
    windowrule = float, title:^(Authentication Required)$
    windowrule = float, title:^(Add Folder to Workspace)$
    windowrule = float,initialtitle:^(Open File)$
    windowrule = float,title:^(Choose Files)$
    windowrule = float,title:^(Save As)$
    windowrule = float,title:^(Confirm to replace files)$
    windowrule = float,title:^(File Operation Progress)$
    windowrule = float,class:^([Xx]dg-desktop-portal-gtk)$
    windowrule = float, title:^(File Upload)(.*)$
    windowrule = float, title:^(Choose wallpaper)(.*)$
    windowrule = float, title:^(Library)(.*)$
    windowrule = float,class:^(.*dialog.*)$
    windowrule = float,title:^(.*dialog.*)$
# }}}

# LAYER RULES {{{
    layerrule = blur,rofi
    layerrule = ignorezero,rofi
    layerrule = blur,notifications
    layerrule = ignorezero,notifications
    layerrule = blur,swaync-notification-window
    layerrule = ignorezero,swaync-notification-window
    layerrule = blur,swaync-control-center
    layerrule = ignorezero,swaync-control-center
    layerrule = blur,logout_dialog
# }}}
